"Vim: configuration file 
" disable vi compatibility (emulation of old bugs)
set nocompatible
filetype plugin indent on

" set the runtime path to include Vundle and initialize
 set rtp+=~/.vim/bundle/Vundle.vim
 call vundle#begin()
" " alternatively, pass a path where Vundle should install plugins
" "call vundle#begin('~/some/path/here')
"
" " let Vundle manage Vundle, required
 Plugin 'VundleVim/Vundle.vim'
 Plugin 'Valloric/YouCompleteMe'

"
" " The following are examples of different formats supported.
" " Keep Plugin commands between vundle#begin/end.
" " plugin on GitHub repo
 Plugin 'tpope/vim-fugitive'
" " plugin from http://vim-scripts.org/vim/scripts.html
" " Plugin 'L9'
" " Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'
" " git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
" " The sparkup vim script is in a subdirectory of this repo called vim.
" " Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" " Install L9 and avoid a Naming conflict if you've already installed a
" " different version somewhere else.
" " Plugin 'ascenator/L9', {'name': 'newL9'}
"
" " All of your Plugins must be added before the following line
 call vundle#end()            " required


" use indentation of previous line
set autoindent
" use intelligent indentation for C
set smartindent
set ruler
set wildmode=list:longest
" configure tabwidth and insert spaces instead of tabs
set tabstop=2        " tab width is 2 spaces
set shiftwidth=2     " indent also with 2 spaces
set expandtab        " expand tabs to spaces

" wrap lines at 120 chars. 80 is somewaht antiquated with nowadays displays.
set wrap
set textwidth=80
set colorcolumn=+1

" turn syntax highlighting on
filetype on
filetype plugin on
filetype indent on
syntax on
set t_Co=256
syntax enable
colorscheme brogrammer

set wrap linebreak nolist
"Since I'm sloppy with my shift key, :Wq maps to :wq
command W w
command Wq wq

" Uses filename regex for searching, not contents (seems to get better results)
let g:ctrlp_regexp = 1
let g:ctrlp_max_files=0
let g:ctrlp_max_depth=40
let g:ctrlp_clear_cache_on_exit = 0
set wildignore+=*/tmp/*,*.so,*.swp,*.o,*.a,*.zip,*.beam,*/.eunit/*,*.pyc,*/ext/*
set runtimepath^=~/.vim/bundle/ctrlp.vim
" Faster ctrlp indexing with ag
"let g:ctrlp_user_command = 'ag'

let g:ycm_global_ycm_extra_conf="/home/abhi/.vim/bundle/.ycm_extra_conf.py"
" turn line numbers on
set number
" highlight matching braces
set showmatch
" intelligent comments
set comments=sl:/*,mb:\ *,elx:\ */

"let g:clang_library_path="let g:clang_library_path='/usr/lib/llvm-3.8/lib"

"set tags=./tags,tags;
" Install OmniCppComplete like described on http://vim.wikia.com/wiki/C++_code_completion
" This offers intelligent C++ completion when typing ‘.’ ‘->’ or <C-o>
" Load standard tag files
set tags+=~/.vim/tags/cpp
set tags+=~/.vim/tags/gl
set tags+=~/.vim/tags/sdl
set tags+=~/.vim/tags/qt4
